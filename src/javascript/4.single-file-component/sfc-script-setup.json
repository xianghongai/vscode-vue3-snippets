{
	"Vue: defineProps()": {
		"prefix": [
			"defineProps"
		],
		"body": [
			"defineProps({",
			"  ${1}",
			"});",
			""
		],
		"description": "`defineProps` and `defineEmits` are compiler macros only usable inside `<script setup>`.\nThey do not need to be imported, and are compiled away when `<script setup>` is processed.\n"
	},
	"Vue: defineEmits()": {
		"prefix": [
			"defineEmits"
		],
		"body": [
			"defineEmits({",
			"  ${1}",
			"});",
			""
		]
	},
	"Vue: defineModel()": {
		"prefix": [
			"defineModel"
		],
		"body": [
			"const ${2:value} = defineModel(${1:'value'});"
		],
		"description": "The prop name will default to \"modelValue\".\n// declares \"modelValue\" prop, consumed by parent via v-model\nconst model = defineModel();\n// OR: declares \"modelValue\" prop with options\nconst model = defineModel({ type: String })\n// emits \"update:modelValue\" when mutated\nmodel.value = 'hello'\n"
	},
	"Vue: defineModel(), Modifiers and Transformers": {
		"prefix": "defineModel",
		"body": [
			"const [modelValue, modelModifiers] = defineModel({",
			"  set(value) {",
			"    if (modelModifiers.${1:property}) {$0",
			"      return value;",
			"    }",
			"    return value;",
			"  }",
			"});"
		]
	},
	"Vue: defineExpose()": {
		"prefix": [
			"defineExpose"
		],
		"body": [
			"defineExpose({",
			"  ${1}",
			"});"
		],
		"description": "Components using `<script setup>` are closed by default.\n"
	},
	"Vue: defineOptions()": {
		"prefix": [
			"defineOptions"
		],
		"body": [
			"defineOptions({",
			"  ${1}",
			"});"
		],
		"description": "Only supported in 3.3+.\n"
	},
	"Vue: useSlots()": {
		"prefix": "useSlots",
		"body": [
			"const slots = useSlots();"
		]
	},
	"Vue: useAttrs()": {
		"prefix": "useAttrs",
		"body": [
			"const attrs = useAttrs();"
		]
	}
}
